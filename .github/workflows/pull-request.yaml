name: Pull request

on:
  pull_request:
    types: [opened, reopened, labeled, synchronize, ready_for_review]

env:
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build-dev:
    runs-on: ubuntu-latest
    outputs:
      image: "${{ steps.image-build.outputs.image-name }}:${{ steps.image-build.outputs.sha-tag }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: 'Build, tag and push image to ECR'
        uses: spotoninc/github-action-docker-build-and-push@v1
        id: image-build
        with:
          build-args: |
            BUILD_COMMIT_SHA=localdev
          cache-key: ${{ github.event.repository.name }}

  lint:
    name: "Lint / ${{ matrix.linter }}"
    runs-on: ubuntu-latest
    needs:
      - build-dev
    container:
      image: ${{ needs.build-dev.outputs.image }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - linter: flake8
            reporter: github-check
            format: flake8
          - linter: isort
            reporter: github-pr-review
            format: diff
          - linter: black
            reporter: github-pr-review
            format: diff
          - linter: deps
            reporter: none
            format: none
          - linter: mypy
            reporter: github-check
            format: mypy
    steps:
      - name: Repo checkout
        uses: actions/checkout@v3
      - name: Make copy of example.env file
        uses: canastro/copy-action@master
        with:
          source: ".env.example"
          target: ".env"
      - name: "Run ${{ matrix.linter }}"
        shell: bash
        run: |
          set +e
          echo 'output<<OUTPUT_VAR_EOF' >> $GITHUB_OUTPUT
          make ci/lint/${{ matrix.linter }} | tee -a $GITHUB_OUTPUT
          exitcode="${PIPESTATUS[0]}"
          echo 'OUTPUT_VAR_EOF' >> $GITHUB_OUTPUT
          exit $exitcode
        id: "lint"
      - uses: reviewdog/action-setup@v1
        if: "always() && matrix.reporter != 'none'"
        with:
          reviewdog_version: v0.14.2
      - name: annotate
        if: "always() && matrix.reporter != 'none'"
        env:
          LINT_OUTPUT: ${{ steps.lint.outputs.output }}
          REVIEWDOG_GITHUB_API_TOKEN: ${{ github.token }}
        run: |
          echo "${LINT_OUTPUT}" | tail -n +2 | reviewdog \
            -name="${{ matrix.linter }}" \
            -f="${{ matrix.format }}" \
            -reporter="${{ matrix.reporter }}" \
            -filter-mode="diff_context" \
            -level="error" \
            -fail-on-error="false"
      - name: summary
        if: always()
        env:
          LINT_OUTPUT: ${{ steps.lint.outputs.output }}
        run: |
          echo "\n${LINT_OUTPUT}\n" | sed 's/^/    /' >> $GITHUB_STEP_SUMMARY

  tests:
    runs-on: ubuntu-latest
    needs:
      - build-dev
      - lint
    container:
      image: ${{ needs.build-dev.outputs.image }}
    steps:
      - name: Repo checkout
        uses: actions/checkout@v3
      - name: Make copy of example.env file
        uses: canastro/copy-action@master
        with:
          source: ".env.example"
          target: ".env"
      - name: "Run tests"
        run: "make ci/test"
        id: "test"
      - uses: pmeier/pytest-results-action@main
        if: always()
        with:
          path: test-results.xml
          summary: true
          display-options: fEX
          fail-on-empty: true
